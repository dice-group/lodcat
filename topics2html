#!/usr/bin/env perl
use strict;
use warnings;
use IPC::Open2;

my @quality;
open my $QF, '<', $ARGV[0] or die "$!";
while (<$QF>) {
    chomp;
    push @quality, $_;
}

my @labels;
open my $LF, '<', $ARGV[1] or die "$!";
while (<$LF>) {
    chomp;
    s/^\d+,//;
    push @labels, [split/,/];
}

my $cin;
my $cout;
open2($cout, $cin, './normalize-wikipedia-titles');
print $cin join "\n", map { @$_ } @labels;
close $cin;
my $i = 0;
my $j = 0;
while (<$cout>) {
    chomp;
    $labels[$i][$j] = $_;
    $j++;
    if ($j >= @{$labels[$i]}) {
        $j = 0;
        $i++;
        last if $i >= @labels;
    }
}

open my $topwordsFile, '<', $ARGV[2] or die "$!";
my @topics = split /;/, <$topwordsFile>;
my @lines;
while (<$topwordsFile>) {
    chomp;
    push @lines, [split /;/];
}

my @words;
my @probabilities;
my $topicID = 0;
for (@topics) {
    /^topic/ and do {
        push @words, [map { shift @$_ } @lines];
        push @probabilities, [map { shift @$_ } @lines];
        $topicID++;
    }
}

print qq{<table class="lodcat-topics">\n};
print "<caption>Topics</caption>\n";
print "<thead><th>ID</th><th>Quality</th><th colspan=3>Label candidates</th><th colspan=10>Top words</th></thead>";
print "<tbody>\n";

for (my $i = 0; $i < @quality; $i++) {
    print "<tr><td>$i</td><td>$quality[$i]</td>";
    print map { "<td>$_</td>" } @{$labels[$i]};
    print map { "<td>$_</td>" } @{$words[$i]} ;
    print "</tr>\n";
}

print "</tbody>\n";
print "</table>\n";
