#!/usr/bin/env python3
import pika
import subprocess
import sys

def processFile(file):
    if 'squirrel_metadata' in file:
        return
    try:
        subprocess.check_call(["bash", "-c", "ls -lh " + file])
    except subprocess.CalledProcessError:
        return
    # subprocess.check_call(["bash", "-c", "zcat data/*/*/" + str(body) + ".gz ||true |java -jar lodcat.extractor/target/lodcat.extractor.jar"])
    subprocess.check_call(["bash", "-c", "java -jar lodcat.extractor/target/lodcat.extractor.jar <" + file])

def callback(ch, method, properties, body):
    file = body.decode('utf-8')
    try:
        processFile(file)
        print("%r done" % file)
        ch.basic_ack(delivery_tag=method.delivery_tag)
    except subprocess.CalledProcessError:
        print("%r failed" % file)
        ch.basic_nack(delivery_tag=method.delivery_tag)
        # We will just immediately receive it again...
        sys.exit(1)

connection = pika.BlockingConnection(pika.ConnectionParameters(
    host='localhost',
    heartbeat=600,
    blocked_connection_timeout=300,
))
channel = connection.channel()
channel.queue_declare(queue='file', durable=True)
print('Waiting for messages. To exit press CTRL+C')
channel.basic_qos(prefetch_count=1)
channel.basic_consume(queue='file', on_message_callback=callback)
channel.start_consuming()
