#!/usr/bin/env python3
from gensim.corpora.mmcorpus import MmCorpus
from gensim.models import LdaModel
from lxml import etree
from tqdm import tqdm
import argparse
import logging

MODEL_FILE = 'gensim-ldamodel'

logging.basicConfig(level=logging.DEBUG)

parser = argparse.ArgumentParser()
parser.add_argument('--model', type=str, required=True, help='input gensim ldamodel file')
parser.add_argument('--corpus', type=str, required=True, help='input corpus on which the model was trained')
parser.add_argument('--output', type=str, required=True, help='output xml file')
args = parser.parse_args()

model = LdaModel.load(args.model)
corpus = MmCorpus(args.corpus)

with etree.xmlfile(args.output) as xml:
    with xml.element('ldamodel'):
        if len(model.eta.shape) == 1:
            with xml.element('eta'):
                xml.write(str(model.eta.mean()))
        with xml.element('numberOfTopics'):
            xml.write(str(model.num_topics))
        with xml.element('dictionary'):
            for id, word in tqdm(model.id2word.items()):
                el = etree.Element('word', id=str(id))
                el.text = word
                xml.write(el, '\n')
                el = None
        with xml.element('documents'):
            for doc in tqdm(corpus):
                with xml.element('document'):
                    _, word_topic, word_phi = model.get_document_topics(bow=doc, minimum_probability=0, per_word_topics=True)
                    topics = {word: next(iter(topics), -1) for word, topics in word_topic}
                    for word, freq in doc:
                        el = etree.Element('t', id=str(word), topic=str(topics[word]), freq=str(int(freq)))
                        xml.write(el, '\n')
                        el = None
